$font-property-map: (
  "fallback": (
    font-family: $font-family,
    font-size: $p-fontsize,
    line-height: 1.3,
    font-weight: normal,
    margin: 0,
  ),
  "h1": (
    font-size: $h1-fontsize,
    font-weight: 300
  ),
  "h2": (
    font-size: $h2-fontsize,
    font-weight: 300
  ),
  "h3": (
    font-size: $h3-fontsize,
    font-weight: 300
  ),
  "h4": (
    font-size: $h4-fontsize,
    font-weight: 300
  ),
  "h5": (
    font-size: $h6-fontsize
    ),
  "h6": (
    font-size: $h6-fontsize
  ),
  "p": (
    font-size: $p-fontsize
  ),
);

@function font-properties($font_type, $key) {
  @if map-has-key($font-property-map, $font_type) {
    $curr_type:       map-get($font-property-map, $font_type);
    $fallback_type:   map-get($font-property-map, "fallback");
    @if map-has-key($curr_type, $key) {
      @return map-get($curr_type, $key);
    } @else if map-has-key($fallback_type, $key) {
      @return map-get($fallback_type, $key);
    } @else {
      @return null;
    }
  }
  @return null;
}

@each $font_class, $font_attr in $font-property-map {
  @if not($font_class == "fallback" or $font_class == 'base') {
    #{$font_class} {
      font-family:      font-properties($font_type: #{$font_class},   $key: "font-family");
      font-size:        font-properties($font_type: #{$font_class},   $key: "font-size");
      color:            font-properties($font_type: #{$font_class},   $key: "color");
      text-transform:   font-properties($font_type: #{$font_class},   $key: "text-transform");
      font-weight:      font-properties($font_type: #{$font_class},   $key: "font-weight");
      margin:           font-properties($font_type: #{$font_class},   $key: "margin");
      line-height:      font-properties($font_type: #{$font_class},   $key: "line-height");
      text-size-adjust: 100%;
    }
  }
}

@mixin icon-constructor(
  $font: $icon-font,
  $font_size: $icon-size
) {
  font-family: $font;
  font-size: $font_size;
  font-weight: normal;
  display: flex;
  overflow: hidden;
  align-items: center;
  font-style: normal;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  vertical-align: middle;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-feature-settings: 'liga';
  -webkit-font-smoothing: antialiased;
}

.aa-icon,
.cb-icon,
.cb_activeadmin-icons {
  font-size: $icon-size;
  @include icon-constructor;
}

html {
  font-size: $base-fontsize;
  font-family: $font-family;
  -webkit-font-smoothing: antialiased;
  text-rendering: geometricPrecision;
  line-height: 1.3;
  color: $text-color-primary;
}
