form {
  ul.errors {
    @extend %flash-base;

    padding-left: 4 * $offset-base;
    margin-bottom: 2 * $offset-base;
  }

  ol,
  ul {
    &:not(.errors) {
      padding: 0;
      margin: 0;
      list-style: none;
    }
  }

  select {
    @include input-select-constructor;
  }

  input {
    &[type='submit'] {
      @include button-constructor(
        $color: $form-submit-btn-color, $type: $form-submit-btn-type
      );
    }
  }

  label.label {
    display: block;
    width: 100%;
    padding: $offset-base 0;
    font-size: $label-fontsize;
    font-weight: $font-bold;
    color: $label-text-color;
    text-transform: uppercase;

    abbr {
      &[title='required'] {
        margin-left: $offset-base / 2;
        color: $brand-danger;
        text-decoration: none;
        border: 0;
      }
    }
  }

  .input {
    padding: 0;
    margin-bottom: 2 * $offset-base;

    &.hidden {
      display: none;
    }

    &.error {
      @extend %input-error;

      label.label {
        color: $brand-danger;
      }
    }

    &.stringish {
      @include input-text-constructor;
    }

    &.boolean {
      @include input-checkbox-constructor;
    }

    &.text {
      @include input-textarea-constructor;
    }

    .inline-errors {
      margin-top: 2 * $offset-base;
      font-size: $p-fontsize;
      color: $brand-danger;
    }

    .inline-hints {
      margin-top: 2 * $offset-base;
      font-size: $p-fontsize;
      color: $text-color-secondary;
    }
  }

  .actions {
    ol > li {
      float: right;
      width: auto;
      margin-left: $offset-base;
    }
  }

  .cancel > a {
    @include button-constructor(
      $color: $form-cancel-btn-color, $type: $form-cancel-btn-type
    );
  }
}
